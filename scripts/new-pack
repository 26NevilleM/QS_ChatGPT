#!/usr/bin/env bash
set -euo pipefail

if [[ $# -lt 3 ]]; then
  echo "Usage: scripts/new-pack <bucket> <slug> <title> [--owner NAME] [--persona P] [--use-case U] [--version V] [--status S] [--tags csv] [--no-push]"
  exit 1
fi

BUCKET="$1"; shift
SLUG="$1"; shift
TITLE="$1"; shift

OWNER="Unknown"
PERSONA="Operator"
USE_CASE="general"
VERSION="0.1.0"
STATUS="prototype"
TAGS=""
PUSH=1

while [[ $# -gt 0 ]]; do
  case "$1" in
    --owner) OWNER="$2"; shift 2;;
    --persona) PERSONA="$2"; shift 2;;
    --use-case) USE_CASE="$2"; shift 2;;
    --version) VERSION="$2"; shift 2;;
    --status) STATUS="$2"; shift 2;;
    --tags) TAGS="$2"; shift 2;;
    --no-push) PUSH=0; shift;;
    *) echo "Unknown arg: $1"; exit 1;;
  esac
done

PACK_DIR="Vault/Prompt_Library/${BUCKET}/${SLUG}"
mkdir -p "${PACK_DIR}"

# 1) meta.json
if [[ ! -f "${PACK_DIR}/meta.json" ]]; then
  cat > "${PACK_DIR}/meta.json" <<JSON
{
  "bucket": "${BUCKET}",
  "slug": "${SLUG}",
  "title": "${TITLE}",
  "owner": "${OWNER}",
  "persona": "${PERSONA}",
  "use_case": "${USE_CASE}",
  "version": "${VERSION}",
  "status": "${STATUS}",
  "tags": ${TAGS:+["${TAGS//,/\",\"}"]}
}
JSON
  echo "[OK ] Created pack at ${PACK_DIR}"
fi

# 2) prompt.md (prefer template)
if [[ ! -f "${PACK_DIR}/prompt.md" ]]; then
  if [[ -f "Vault/templates/prompt_template.md" ]]; then
    cp "Vault/templates/prompt_template.md" "${PACK_DIR}/prompt.md"
    sed -i '' "1s|^# .*|# ${TITLE}|" "${PACK_DIR}/prompt.md"
  else
    cat > "${PACK_DIR}/prompt.md" <<MD
# ${TITLE}

<!-- Write your prompt here -->
MD
  fi
fi

# 3) checksum + catalog + validation
python3 Vault/tools/update_checksums.py
python3 Vault/tools/build_catalog.py
python3 Vault/tools/validate_all.py

# 4) Commit & push
if [[ $PUSH -eq 1 ]]; then
  if git config --global --get alias.gp >/dev/null; then
    git gp "new: add ${SLUG} pack"
  else
    git add -A
    git commit -m "new: add ${SLUG} pack" --allow-empty
    git push
  fi
else
  echo "[SKIP] Push disabled (--no-push)"
fi

echo "[DONE] ${SLUG}"
