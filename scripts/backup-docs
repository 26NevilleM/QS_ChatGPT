#!/usr/bin/env bash
set -euo pipefail

# Always run from repo root
cd "$(git rev-parse --show-toplevel)"

# Files to include (edit if you add more docs later)
FILES=("README.md" "CONTRIBUTING.md" "CHANGELOG.md")

# Warn if any are missing
missing=0
for f in "${FILES[@]}"; do
  [[ -f "$f" ]] || { echo "[WARN] Missing: $f"; missing=1; }
done
if [[ $missing -eq 1 ]]; then
  echo "[NOTE] Proceeding to zip whatever exists."
fi

ts="$(date +%Y-%m-%d_%H-%M-%S)"
out="$HOME/Downloads/qs_docs_backup_${ts}.zip"

# Create the zip in ~/Downloads
zip -q -9 "$out" "${FILES[@]}" 2>/dev/null || true

echo "[OK] Backup created: $out"
# --- Prune old backups: keep the 10 newest, delete the rest (portable) ---
# Filenames are predictable (no spaces). Use ls -t + while loop (no xargs, no mapfile).
count=0
ls -1t "$HOME"/Downloads/qs_docs_backup_*.zip 2>/dev/null | while IFS= read -r f; do
  count=$((count+1))
  if [ "$count" -gt 10 ]; then
    rm -f -- "$f"
  fi
done
# --- end prune block ---
